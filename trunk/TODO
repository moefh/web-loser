
In no particular order:

*) Player health

Implement player attributes like health and weapon power level.


*) Minimap

Improve minimap, it's too ugly.


*) Map objects

The map files specify an attribute "objects", an array of map objects.
An object's "npc" attribute specifies its behaviour (e.g. "shadow" is
an enemy, "energy" is an energy capsule, "tele/teleporter" is a
teleporter source, "tele/teletarget" is a teleport target, etc.).

Not all object attributes are relevant (e.g. "vulnerability" only
applies to enemies).


*) Multiplayer

Some kind of multiplayer involving a server.


*) Map editor

Current maps are exported from the original maps using maps/src/conv.
The original map editor is awful, we should make a new one.


*) Enemy AI

Implement some kind of enemy AI.

There are two possible ways to do enemy AI (enemy.js, calc_step()).

  1) make the AI calculate the necessary key state to order the
     character to act, like a human player does.

  2) override the step() method to calculate the enemy's position and
     frame directly, create shots, etc.  Care must be taken to make the
     enemy movement and animation fluid.

Note that each enemy type may be implemented in a different way. To
create new enemy type:

  - create a new NPC type in data/npc_defs.js
  - change a map to use the new enemy type
  - create a new class (derived from NPC or character) to implement the AI
  - update NPC.make() in npc.js to use your new class for the new NPC type
